<!DOCTYPE html>
<meta charset="utf-8">
<head>
    <title><%=title%></title>
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</head>
<style>

    body {
        font: 12px sans-serif;
    }

    path {
        stroke-width: 1px;
        stroke: white;
        fill: #41474c;
        cursor: pointer;
    }

    path:hover, path.highlighted {
        fill: tomato;
    }

    #table{
        float: right;
        margin: 30px;
    }


</style>
<body>
<% if (title) { %>
<script>
    myVar = JSON.parse('<%- JSON.stringify(data) %>');
</script>
<% } %>
<div id="table">
    <table>
        <tr>
            <td>ID</td>
            <td>FLOOR</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
        </tr>
    </table>
</div>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

    //Map dimensions (in pixels)
    var width = 587,
        height = 600;

    //Map projection
    var projection = d3.geo.mercator()
        .scale(151663.0533981322)
        .center([76.99337768554688,28.518047809714815]) //projection center
        .translate([width/2,height/2]) //translate to center the map in view

    //Generate paths based on projection
    var path = d3.geo.path()
        .projection(projection);

    //Create an SVG
    var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height);

    //Group for the map features
    var features = svg.append("g")
        .attr("class","features");

    //Create zoom/pan listener
    //Change [1,Infinity] to adjust the min/max zoom scale
    var zoom = d3.behavior.zoom()
        .scaleExtent([1, 6])
        .on("zoom",zoomed);

    svg.call(zoom);

    d3.json("insidex.geo.json",function(error,geodata) {
        if (error) return console.log(error); //unknown error, check the console

        //Create a path for each map feature in the data
        features.selectAll("path")
            .data(geodata.features)
            .enter()
            .append("path")
            .attr("d",path)
            .on("mouseover",hovered)
            .on("click",clicked);

    });

    // Add optional onClick events for features here
    // d.properties contains the attributes (e.g. d.properties.name, d.properties.population)
    function clicked(d,i) {
        console.log("clicked");
    }

    function hovered(d,i) {
        //console.log(d.properties.Id,i);

        var result = $.grep(myVar, function(e){ return e.Id == d.properties.Id; });
        //console.log(result[0].Id);
        var ab =$('#table table tr:last td:first');
        $('#table table tr:last td:first')[0].innerHTML = result[0].Id;
        $('#table table tr:last td:last')[0].innerHTML = result[0].FLOOR;
        //console.log(ab);
        //console.log($('#table table tr:last td:first')[0]);

    }
    //Update map on zoom/pan
    function zoomed() {
        features.attr("transform", "translate(" + zoom.translate() + ")scale(" + zoom.scale() + ")")
            .selectAll("path").style("stroke-width", 1 / zoom.scale() + "px" );
    }

</script>
</body>